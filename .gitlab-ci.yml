stages:
  - deploy

variables:
  GIT_STRATEGY: clone  # always clone fresh
  GIT_DEPTH: 0  # clone with all comits
  MAIN_BRANCH: main
  QUARTO_VERSION: 1.3.433

pages:
  stage: deploy
  image: python:3.10.10-slim
  before_script:
    # Install system libraries
    - |
      apt-get update && apt-get install -y \
        r-base \
        libcurl4-openssl-dev \
        libssl-dev \
        libxml2-dev \
        libfontconfig1-dev \
        libharfbuzz-dev \
        libfreetype6-dev \
        libjpeg62-turbo-dev \
        libpng-dev \
        libtiff5-dev \
        libgl1-mesa-dev \
        pandoc \
        curl \
        wget \
        && rm -rf /var/lib/apt/lists/*
    # Install R packages
    - echo 'options(repos = c(REPO_NAME = "https://packagemanager.rstudio.com/all/latest"))' >> /etc/R/Rprofile.site
    - R -e "install.packages(c('dplyr', 'ggplot2', 'rmarkdown'))"
    # Download and install Quarto
    - mkdir -p /opt/quarto/${QUARTO_VERSION}
    - | 
      curl -o quarto.tar.gz \
        -L "https://github.com/quarto-dev/quarto-cli/releases/download/v${QUARTO_VERSION}/quarto-${QUARTO_VERSION}-linux-amd64.tar.gz"
    - |
      tar -zxvf quarto.tar.gz \
        -C "/opt/quarto/${QUARTO_VERSION}" \
        --strip-components=1
    - rm quarto.tar.gz
    - ln -s /opt/quarto/${QUARTO_VERSION}/bin/quarto /usr/local/bin/quarto
    - quarto install tinytex
    # Install Python packages
    - python -m pip install -r "requirements.txt"
    # Check Quarto
    - quarto check
  script:
    - cd docs/ && quarto render . && cd ..
    - mv docs/_site public
  artifacts:
    paths:
      - public
  tags:
    - quarto-templates
  only:
    - $MAIN_BRANCH


github:
  image:
    name: alpine/git:2.40.1
    entrypoint: [""]
  stage: deploy
  script:
    # set up as a on proper branch (not detached)
    - git checkout $MAIN_BRANCH || git checkout -b $MAIN_BRANCH
    # set github remote and fetch
    - git remote add github https://${GITHUB_ACCESS_TOKEN}@github.com/profinit/quarto-templates
    - git fetch --all
    - git reset --hard origin/$MAIN_BRANCH  # update to the last commit of the branch
    # push to remote (don't force, only update new commits)
    - git push --tags -u github $MAIN_BRANCH:$MAIN_BRANCH
  rules:
    - if: '$CI_COMMIT_TAG'
      when: always
    - if: '$CI_COMMIT_REF_NAME == "main"'
      when: manual
    - when: never
  tags:
    - quarto-templates